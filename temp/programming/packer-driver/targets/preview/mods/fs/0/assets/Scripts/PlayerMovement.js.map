{"version":3,"sources":["file:///D:/Cocos/Projects/TreeChopper/assets/Scripts/PlayerMovement.ts"],"names":["_decorator","Component","systemEvent","SystemEventType","KeyCode","resources","SpriteFrame","Sprite","RigidBody2D","Vec2","randomRange","sys","randomRangeInt","GameController","SoundManager","TreeManager","ccclass","property","PlayerMovement","type","onLoad","on","KEY_DOWN","onKeyDown","sprite","getComponent","rigidBody2D","distanceFromTree","Math","abs","node","position","x","treeManager","playerMovement","parseInt","localStorage","getItem","beltLevel","load","spriteDirectory","err","spriteFrame","spriteArray","push","schedule","playIdleAnimation","Infinity","event","Instance","isLost","isPaused","keyCode","ARROW_LEFT","KEY_A","chopLeft","ARROW_RIGHT","KEY_D","chopRight","setScale","setPosition","y","playChopAnimation","chopTree","knockDown","unschedule","stopChopAnimation","scheduleOnce","playSound","bonkSound","deathSprite","deathAnimSpFr","shift","knockAway","punchSound","angularVelocity","scale","linearVelocity","length","index","min","idleAnimSpFr","idleAnimFrame","unschedulePlayIdleAnim"],"mappings":"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","sourcesContent":["\nimport { _decorator, Component, Node, systemEvent, SystemEventType, EventKeyboard, KeyCode, Vec3, resources, Asset, SpriteFrame, Sprite, Scheduler, RigidBody2D, Vec2, UITransform, random, randomRange, ERigidBody2DType, sys, debug, randomRangeInt } from 'cc';\nimport { GameController } from './GameController';\nimport { SoundManager } from './SoundManager';\nimport { TreeManager } from './TreeManager';\nconst { ccclass, property } = _decorator;\n\n/**\n * Predefined variables\n * Name = PlayerMovement\n * DateTime = Thu Feb 10 2022 22:37:08 GMT+0700 (Indochina Time)\n * Author = briezar\n * FileBasename = PlayerMovement.ts\n * FileBasenameNoExtension = PlayerMovement\n * URL = db://assets/PlayerMovement.ts\n * ManualUrl = https://docs.cocos.com/creator/3.4/manual/en/\n *\n */\n\n@ccclass('PlayerMovement')\nexport class PlayerMovement extends Component {\n    @property({ type: TreeManager }) public treeManager: TreeManager;\n\n    distanceFromTree: number;\n    beltLevel: number = 0;\n    spriteDirectory: string[][] =\n        [\n            [\"char-1/spriteFrame\", \"char-hit/spriteFrame\", \"char-kick/spriteFrame\"],\n            [\"char-1/spriteFrame\", \"char-hit/spriteFrame\", \"char-kick/spriteFrame\"]\n        ];\n\n    //Player is on the left when scale.x = -1;\n    @property({ type: SpriteFrame }) public idleAnimSpFr: SpriteFrame[] = [];\n    idleAnimFrame: number = 0;\n    @property({ type: SpriteFrame }) public deathAnimSpFr: SpriteFrame[] = [];\n    spriteArray: SpriteFrame[] = [];\n    sprite: Sprite;\n    rigidBody2D: RigidBody2D;\n\n    onLoad() {\n        systemEvent.on(SystemEventType.KEY_DOWN, this.onKeyDown, this);\n        this.sprite = this.getComponent(Sprite);\n        this.rigidBody2D = this.getComponent(RigidBody2D);\n\n        this.distanceFromTree = Math.abs(this.node.position.x);\n        this.treeManager.playerMovement = this;\n        if (parseInt(sys.localStorage.getItem('bestScore')) > 1000) {\n            this.beltLevel++;\n        }\n\n        resources.load(this.spriteDirectory[this.beltLevel][0], SpriteFrame, (err, spriteFrame) => {\n            this.spriteArray.push(spriteFrame);\n            this.sprite.spriteFrame = spriteFrame;\n\n        });\n\n        resources.load(this.spriteDirectory[this.beltLevel][1], SpriteFrame, (err, spriteFrame) => {\n            this.spriteArray.push(spriteFrame);\n        });\n\n        resources.load(this.spriteDirectory[this.beltLevel][2], SpriteFrame, (err, spriteFrame) => {\n            this.spriteArray.push(spriteFrame);\n        });\n\n        this.schedule(this.playIdleAnimation, 0.4, Infinity);\n    }\n\n    onKeyDown(event: EventKeyboard) {\n        if (GameController.Instance.isLost || GameController.Instance.isPaused) return;\n\n        switch (event.keyCode) {\n            case KeyCode.ARROW_LEFT:\n            case KeyCode.KEY_A:\n                this.chopLeft();\n                break;\n            case KeyCode.ARROW_RIGHT:\n            case KeyCode.KEY_D:\n                this.chopRight();\n                break;\n        }\n    }\n\n    chopRight() {\n        this.node.setScale(1, 1, 1);\n        this.node.setPosition(this.distanceFromTree, this.node.position.y);\n        this.playChopAnimation();\n        this.treeManager.chopTree();\n    }\n\n    chopLeft() {\n        this.node.setScale(-1, 1, 1);\n        this.node.setPosition(-this.distanceFromTree, this.node.position.y);\n        this.playChopAnimation();\n        this.treeManager.chopTree();\n    }\n\n\n    knockDown() {\n        this.unschedule(this.stopChopAnimation);\n        this.scheduleOnce(() => {\n            SoundManager.Instance.playSound(SoundManager.Instance.bonkSound);\n        }, 0.1);\n        this.schedule(() => {\n            let deathSprite = this.deathAnimSpFr.shift();\n            this.sprite.spriteFrame = deathSprite;\r\n        }, 0.15, 2, 0.1);\n    }\n\n    knockAway() {\n        SoundManager.Instance.playSound(SoundManager.Instance.punchSound);\n        this.rigidBody2D.angularVelocity = this.node.scale.x * -10;\n        this.rigidBody2D.linearVelocity = new Vec2(this.node.scale.x * 70, randomRange(15, 20));\n\n    }\n\n    playChopAnimation() {\n        this.unschedule(this.stopChopAnimation);\n        this.sprite.spriteFrame = this.spriteArray[0];\n        this.scheduleOnce(() => {\n            this.sprite.spriteFrame = this.spriteArray[randomRangeInt(1, this.spriteArray.length)];\n        }, 0.05);\n\n        this.scheduleOnce(this.stopChopAnimation, 0.2);\n    }\n\n    stopChopAnimation() {\n        this.sprite.spriteFrame = this.spriteArray[0];\n    }\n\n    playIdleAnimation() {\n        let index = Math.min(this.idleAnimSpFr.length - 1, this.idleAnimFrame);\n        this.sprite.spriteFrame = this.idleAnimSpFr[index];\r\n        this.idleAnimFrame++;\r\n        this.idleAnimFrame %= 4;\r\n    }\n\n    unschedulePlayIdleAnim() {\n        this.unschedule(this.playIdleAnimation);\r\n    }\n    //update (deltaTime: number) {\n\n    //}\n}\n\n/**\n * [1] Class member could be defined like this.\n * [2] Use `property` decorator if your want the member to be serializable.\n * [3] Your initialization goes here.\n * [4] Your update function goes here.\n *\n * Learn more about scripting: https://docs.cocos.com/creator/3.4/manual/en/scripting/\n * Learn more about CCClass: https://docs.cocos.com/creator/3.4/manual/en/scripting/ccclass.html\n * Learn more about life-cycle callbacks: https://docs.cocos.com/creator/3.4/manual/en/scripting/life-cycle-callbacks.html\n */\n"]}