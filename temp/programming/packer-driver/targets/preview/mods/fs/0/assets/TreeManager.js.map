{"version":3,"sources":["file:///D:/Cocos/Projects/Karate%20Chop/assets/TreeManager.ts"],"names":["_decorator","Component","Prefab","instantiate","RigidBody2D","Vec2","UITransform","GameController","SoundManager","ccclass","property","TreeManager","type","start","populateStartingTrees","update","deltaTime","treeArray","position","y","treeHeight","setPosition","dropSpeed","i","length","chopTree","playerMovement","node","scale","x","name","knockAway","Instance","lose","playWoodChopSound","timer","maxTime","choppedTree","shift","getComponent","linearVelocity","console","log","scheduleOnce","destroy","addRandomTree","knockDown","getChildByName","height","treePrefab","setParent","tree","Math","random","treeWithStickPrefab","setScale","push"],"mappings":"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","sourcesContent":["\nimport { _decorator, Component, Node, Prefab, instantiate, Vec3, RigidBody2D, Vec2, game, director, UITransform, clamp } from 'cc';\nimport { GameController } from './GameController';\r\nimport { PlayerMovement } from './PlayerMovement';\r\nimport { SoundManager } from './SoundManager';\r\nconst { ccclass, property } = _decorator;\n\n/**\n * Predefined variables\n * Name = TreeManager\n * DateTime = Thu Feb 10 2022 23:14:06 GMT+0700 (Indochina Time)\n * Author = briezar\n * FileBasename = TreeManager.ts\n * FileBasenameNoExtension = TreeManager\n * URL = db://assets/TreeManager.ts\n * ManualUrl = https://docs.cocos.com/creator/3.4/manual/en/\n *\n */\n\n@ccclass('TreeManager')\nexport class TreeManager extends Component {\n    @property({ type: Prefab })\n    public treePrefab: Prefab;\n\n    @property({ type: Prefab })\n    public treeWithStickPrefab: Prefab;\n\n    playerMovement: PlayerMovement;\n\n    treeArray: Node[] = [];\n\n    treeHeight: number;\n    dropSpeed: number = 1000;\n\n    start() {\n        this.populateStartingTrees();\n    }\n\n    update(deltaTime: number) {\n\n        //Move to position when chop fast\n        if (this.treeArray[0].position.y > this.treeHeight) {\r\n            this.treeArray[0].setPosition(0, this.treeHeight, 0);\r\n        }\n\n        //Drop first block\n        if (this.treeArray[0].position.y > 0.01) {\r\n            this.treeArray[0].setPosition(0, this.treeArray[0].position.y - this.dropSpeed * deltaTime, 0);\r\n        }\n        else if (this.treeArray[0].position.y < 0.01) {\n            this.treeArray[0].setPosition(0, 0, 0);\n        }\n\n        //Next block sticks to previous block\n        for (var i = 1; i < this.treeArray.length; i++) {\r\n            this.treeArray[i].setPosition(0, this.treeArray[i - 1].position.y + this.treeHeight, 0);\r\n        }\n    }\n\n    chopTree() {\n\r\n        if (this.playerMovement.node.scale.x == this.treeArray[0].scale.x && this.treeArray[0].name == \"TreeWithStick\") {\r\n            this.playerMovement.knockAway();\r\n            GameController.Instance.lose();\r\n            return;\r\n        }\n        SoundManager.Instance.playWoodChopSound();\n        GameController.Instance.timer += 0.5;\n        if (GameController.Instance.timer > GameController.Instance.maxTime) GameController.Instance.timer = GameController.Instance.maxTime;\n        var choppedTree = this.treeArray.shift();\r\n        choppedTree.getComponent(RigidBody2D).linearVelocity = new Vec2(this.playerMovement.node.scale.x * -100, 0);\r\n        console.log(choppedTree.getComponent(RigidBody2D).linearVelocity);\r\n        this.scheduleOnce(() => {\r\n            choppedTree.destroy();\r\n        }, 1);\r\n        this.addRandomTree();\r\n\r\n        if (this.playerMovement.node.scale.x == this.treeArray[0].scale.x && this.treeArray[0].name == \"TreeWithStick\") {\r\n            this.playerMovement.knockDown();\r\n            GameController.Instance.lose();\r\n        }\r\n    }\n\n    populateStartingTrees() {\n\n        this.treeArray[0] = this.node.getChildByName(\"Tree\");\n        this.treeHeight = this.treeArray[0].getComponent(UITransform).height;\n\n        this.treeArray[1] = instantiate(this.treePrefab);\r\n        this.treeArray[1].setParent(this.node);\r\n        this.treeArray[1].setPosition(0, this.treeHeight, 0);\n\n        for (var i = 2; i < 10; i++) {\r\n            this.addRandomTree();\r\n        }\r\n\r\n    }\n\n    addRandomTree() {\n        var tree;\n        if (this.treeArray[this.treeArray.length - 1].name == \"TreeWithStick\") {\r\n            tree = instantiate(this.treePrefab);\r\n        }\n        else {\n            if (Math.random() > 0.5) {\r\n                tree = instantiate(this.treePrefab);\r\n            }\r\n            else {\r\n                tree = instantiate(this.treeWithStickPrefab);\r\n\r\n                if (Math.random() > 0.5) tree.setScale(-1, 1, 1); //flip\r\n            }\r\n        }\r\n        tree.setParent(this.node);\r\n        tree.setPosition(0, this.treeHeight * this.treeArray.length, 0);\r\n        this.treeArray.push(tree);\r\n    }\n}\n\n/**\n * [1] Class member could be defined like this.\n * [2] Use `property` decorator if your want the member to be serializable.\n * [3] Your initialization goes here.\n * [4] Your update function goes here.\n *\n * Learn more about scripting: https://docs.cocos.com/creator/3.4/manual/en/scripting/\n * Learn more about CCClass: https://docs.cocos.com/creator/3.4/manual/en/scripting/ccclass.html\n * Learn more about life-cycle callbacks: https://docs.cocos.com/creator/3.4/manual/en/scripting/life-cycle-callbacks.html\n */\n"]}