{"version":3,"sources":["file:///D:/Cocos/Projects/TreeChopper/assets/Scripts/SoundManager.ts"],"names":["_decorator","Component","AudioSource","AudioClip","randomRangeInt","game","ccclass","property","SoundManager","type","onLoad","addPersistRootNode","node","Instance","audioSource","getComponent","playWoodChopSound","playOneShot","woodChopSounds","length","playSound","clip"],"mappings":";;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,c,OAAAA,c;AAAgBC,MAAAA,I,OAAAA,I;;;;;;;OACxE;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;8BAGaQ,Y,WADZF,OAAO,CAAC,cAAD,C,UAMHC,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEN;AAAR,OAAD,C,UAGRI,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEN;AAAR,OAAD,C,UAGRI,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEN;AAAR,OAAD,C,8CAZb,MACaK,YADb,SACkCP,SADlC,CAC4C;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAcxCS,QAAAA,MAAM,GAAG;AACLL,UAAAA,IAAI,CAACM,kBAAL,CAAwB,KAAKC,IAA7B;AAEAJ,UAAAA,YAAY,CAACK,QAAb,GAAwB,IAAxB;AACA,eAAKC,WAAL,GAAmB,KAAKC,YAAL,CAAkBb,WAAlB,CAAnB;AACH;;AAEDc,QAAAA,iBAAiB,GAAG;AAChB,eAAKF,WAAL,CAAiBG,WAAjB,CAA6B,KAAKC,cAAL,CAAoBd,cAAc,CAAC,CAAD,EAAI,KAAKc,cAAL,CAAoBC,MAAxB,CAAlC,CAA7B;AACH;;AAEDC,QAAAA,SAAS,CAACC,IAAD,EAAkB;AACvB,eAAKP,WAAL,CAAiBG,WAAjB,CAA6BI,IAA7B;AACH;;AA3BuC,O,uCAED,I;;;;;iBAIF,E;;;;;;;;;;;;;AAyBzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\nimport { _decorator, Component, Node, AudioSource, AudioClip, randomRangeInt, game } from 'cc';\nconst { ccclass, property } = _decorator;\n\n/**\n * Predefined variables\n * Name = SoundManager\n * DateTime = Sat Feb 19 2022 16:35:17 GMT+0700 (Indochina Time)\n * Author = briezar\n * FileBasename = SoundManager.ts\n * FileBasenameNoExtension = SoundManager\n * URL = db://assets/SoundManager.ts\n * ManualUrl = https://docs.cocos.com/creator/3.4/manual/en/\n *\n */\n \n@ccclass('SoundManager')\nexport class SoundManager extends Component {\n\n    public static Instance: SoundManager = null;\n\n    audioSource: AudioSource;\n    @property({ type: AudioClip })\n    public woodChopSounds: AudioClip[] = [];\n\n    @property({ type: AudioClip })\n    public bonkSound: AudioClip;\n\n    @property({ type: AudioClip })\n    public punchSound: AudioClip;\n\n    onLoad() {\n        game.addPersistRootNode(this.node);\n\n        SoundManager.Instance = this;\n        this.audioSource = this.getComponent(AudioSource);\n    }\n\n    playWoodChopSound() {\n        this.audioSource.playOneShot(this.woodChopSounds[randomRangeInt(0, this.woodChopSounds.length)]);\n    }\n\n    playSound(clip: AudioClip) {\n        this.audioSource.playOneShot(clip);\n    }\n\n}\n\n/**\n * [1] Class member could be defined like this.\n * [2] Use `property` decorator if your want the member to be serializable.\n * [3] Your initialization goes here.\n * [4] Your update function goes here.\n *\n * Learn more about scripting: https://docs.cocos.com/creator/3.4/manual/en/scripting/\n * Learn more about CCClass: https://docs.cocos.com/creator/3.4/manual/en/scripting/ccclass.html\n * Learn more about life-cycle callbacks: https://docs.cocos.com/creator/3.4/manual/en/scripting/life-cycle-callbacks.html\n */\n"]}